2000-05-03  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* fts: fixing 'save as .pat' methods (messages were not saved correctly)

2000-05-02  Francois Dechelle  <dechelle@lipari.ircam.fr>

	*  fts: added stuff for running fts under purify (ENABLE_PURIFY=yes on make command 
	line). See doc/running.html for further indications.

2000-04-27  Francois Dechelle  <dechelle@lipari.ircam.fr>

	*  Merged all ChangeLog files in subdirectories.

	* fts and java Makefiles: merged all install-noarch and install-arch targets

	* moved and cleaned the rpm and sgi package building scripts

2000-04-07  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* java: changed files names for too long names (MacOS porting)

2000-04-05  Norbert Schnell  <schnell@ircam.fr>

	* fts: runtime/files/midifile.[ch] Added midifile library based on the code by Tim Thompson

2000-03-31  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* fts: sys/modules.[ch]: removed the restart function (which has never been tested nor used).
	Changed all modules accordingly.

2000-03-30  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* java: removed registration panel and the related code.

	* fts: runtime/sched/* and runtime/thread/*: removing the thread directory
	and integrating it in sched.c. Removed the fts_sched_declare stuff,
	that was uselessly complicated. Moving to the single select() scheduler.

2000-03-27  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* java: changed MaxFileChooser.java to find better the file format combo box.

	* fts: changed patcher.c: moving to save .pat files. This is not complete yet...

	* fts: changed patparser.c: removed the scaling that was applied when loading .pat files.

2000-03-23  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* java: fixed in FtsStream.java an incorrect parsing of SYMBOL_AND_DEF_CODE arguments.
	By the way, the parser in FtsStream.java is to be redone reusing incoming.c

	* java: fixed MaxFileChooser.java and PatcherSaveManager.java, going toward saving as .pat.
	Added the code that changes the file type combo box in order to use it
	for format selection. This has probably fixed the destiny of Mda (it will not resist
	to a client and a server not seeing same files at the same place).

	* java: changed protocol handling: FtsStream.java
	  - the protocol is now binary in both directions.
	  - the symbols are cached in both directions.
	  - the code is cleaner

	* fts: changed protocol handling: runtime/client/incoming.c, runtime/client/outgoing.c
	  - the protocol is now binary in both directions.
	  - the symbols are cached in both directions.
	  - the code is cleaner
	  - some bug fixes (symbol cache miss resulted in an infinite loop...)

2000-03-22  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* fts: changed symbols.[ch]:
	  - introduced predefsymbols.h in order to centralize predefined symbols definition
	  - added doc headers to symbols.h
	  - cleaned code in symbols.c

	* fts: changed outgoing.c:
	  - moved symbol cache handling there
	  - removed useless code
	  - fixed sending symbol as string (which happens when symbol cannot be cached)

2000-03-16  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* java: ircam/fts: changed FtsDatagramStream, trying to fix the
	hostname and rsh problem. Just removed the code:
	    serverName = InetAddress.getLocalHost().getHostName();
	But it is probably not enough, and the server connection
	code must be redone.

2000-03-14  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* java: ircam/fts: added a default implementation of handleMessage
	in FtsObject that is based on Core Reflection API. Added a
	method getArgs() in FtsStream and a class FtsAtom.

2000-02-21  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* java: Makefile (jar): fixed missing silk in jar building

2000-02-21  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* fts: fixed "cannot kill fts without being super-user". This came from a bug in 
	non-portable/sgi/platform.c

	* fts: fixed wrong message "cannot lock memory".
	


