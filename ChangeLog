2001-04-27  Norbert Schnell  <schnell@ligeti.ircam.fr>

	* added Wacom V (Intous) support to packages/io/c/src/wacom.c

2001-04-25  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* added packages/alsa/src/alsarawmidiport.c (that contains a ALSA raw midi port...)

	* remove fts/src/runtime/devices/null.c and fts/src/runtime/devices/profdev.c: no longer used

	* added profileaudioport (in package io). It outputs on its outlet
	the estimated sample rate.

	* changed the default audio port mechanism: now the default audio
	port is defined by a variable (DefaultAudioPort). This way, the
	default audio port can be set from a patch (we are moving slowly
	to configuration done by patches). Also changed the nullaudioport
	mechanism (still a little bit ugly).

2001-04-10  Norbert Schnell  <schnell@ligeti.ircam.fr>

	* finalized scope and vector display
	* moved scope and vector display to guiobj package

2001-04-06  Norbert Schnell  <schnell@ligeti.ircam.fr>

	* added oscilloscope

2001-04-03  Norbert Schnell  <schnell@ligeti.ircam.fr>

	* added vector display object to guiobj package and client sources (includiong images)

	* added cut~ and scope~ to signal package

2001-03-30  Norbert Schnell  <schnell@ligeti.ircam.fr>

	* java/src/ircam/jmax/editors/patcher/objects/Display.java: bug
	fix: display objects doesn't set patcher to dirty anymore

	* fts/src/runtime/devices/bytestream.c: bug fix: bytestream
	listener can now remove itself

2001-03-29  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* added package macosx, containing HAL audio port for Mac OS X

2001-03-27  Norbert Schnell  <schnell@ligeti.ircam.fr>

	* packages/ispw/src/sampling/tabpeek.c (ftl_tabpeek): fixed ugly
	bug crashing on DSP on while ISPW signal help summary patch is open

	* doc/ReleaseNotes.html : added summary of the latest updates to the release notes

2001-03-22  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* fixed: hack for default MIDI port.

	* cleaned: documentation (installation, configuration)

2001-03-21  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* added: package sgi, containing SGI audio port

	* added: package oss, containing OSS audio port

2001-03-19  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* removed old directories: alsa0.6dev, alsadev, halsadev, hammerfalldev

	* added null audio port, to prevent locking the machine.

2001-03-15  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* Changed the audio I/O system
	Audio I/O no longer works with devices and logical devices, but
	uses a special object ("audioport") in fts/src/runtime/audio/audioport.c
	Fixed accordingly in~, out~, dac~, adc~ objects

	* Fixed the DSP compiler to accept multiple DSP connections on an inlet.
	This is used by the new implementation of audio I/O

	* Added a first implementation of audioport for ALSA 0.9.0

	* Removed fts/src/runtime/audio/audio.c

2001-02-09  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* Removed packages/alsa0.6dev and moved it to an external package

	* Changed header files structure:
          - fts header files are in include/fts
          - private header files remains in fts/src
          - packages now #include <fts/fts.h>
          - a package can be compiled either inside the jMax source tree
            or outside without changing the sources
          - header files tree is the same in the source tree and in the
            installation


2001-01-15  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* Fixed error in fts/src/sys/Makefile

2001-01-02  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* Fixed install errors in new Makefiles

2000-12-20  Francois Dechelle  <dechelle@lipari.ircam.fr>

	*  operation "Mani Pulite" on Makefiles is going on:
	  . all Makefiles for C part are now in jmax/Makefiles
	  . all platform dependent definitions are in jmax/Makefiles/Makefile.$(ARCH)
	  . you can do a 'make install' in the packages
	  . the packages Makefiles are much simpler (4 lines)
	  . the .so are build from the .o and not from the .a
	

2000-12-14  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* added packages/io/c/src/pipestream.c (a bytestream using a pipe). ***but*** it does 
	not work.

2000-12-13  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* changed VERSION to 2.5.0, in order to be able to patch freely version 2.4.16

2000-12-11  Francois Dechelle  <dechelle@lipari.ircam.fr>

	*  lib/protocol: removed this directory and moved the files in 
	fts/src/runtime/client/protcodec.[ch] for the C part and to /dev/null
	for the Java part

2000-12-05  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* changed the makefiles for FTS: now only one library (libfts.a) is build
	instead of one library per directory. The Makefiles in fts/src/*/* are
	also much simpler.

	* added packages/audpdev

2000-12-04  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* added audpdev in ARCH_PACKAGES

2000-11-30  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* added ENABLE_ALSA in jmax.spec. By defining the environment variable ENABLE_ALSA=yes,
	the rpm will be compiled with ALSA (0.5.x yet)

2000-11-07  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* I think I've fixed the bug of dtd server going up to 99% CPU.
	(file descriptor 0 was set in the select() for dtd server)

	* added a hack in toplevel Makefile to allow to install a single package.
	The correct fix would be to include one single Makefile for the architecture.

2000-10-26  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* added compile hint ENABLE_ALSA0.6 to compile package alsa0.6dev

	* moved score following objects

2000-10-25  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* added packages/alsa0.6dev which contains the ALSA 0.6 device. Now, it works
	only with the Hammerfall card.

2000-09-28  Francois Dechelle  <dechelle@lipari.ircam.fr>

	*  package/unixdtd/src/*: changed a little bit the implementation of
	DTD. Now, a fifo is allocated for each readsf~ object.

2000-09-25  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* fixed with Norbert remaining bug in DTD (strange pauses in readsf~)

2000-09-23  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* fixed SGI multi-processor related issues: fts' options are
	passed to plaform_init(argc,argv), and option --cpu=N means that
	fts will run on processor N. If this option is absent, then it will
	run on first found isolated processor. This has been used because
	if you run 2 fts on the same machine, they would both choose the same
	processor to run on.

2000-09-19  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* fts/src/runtime/sched/sched.[ch]: added fts_sched_add and fts_sched_remove
	to add and remove a free running method to the scheduler loop

2000-08-01  Norbert Schnell  <schnell@ligeti.ircam.fr>

	* packages/explode/c/src/explode.c: added MIDI file export to explode object
	* packages/sequence/c/src/seqmidi.c: added MIDI file import/export to sequence object

2000-07-12  Norbert Schnell  <schnell@ligeti.ircam.fr>

	* packages/midisgi/c/src/sgimidiport.c: fts_midiport_t implementation for SGI
	* packages/midi/*: added package midi (ISPW like midi objects based on fts_midiport_t)

2000-06-23  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* fixed ambiguous class name FileFilter in java/src/ircam/jmax/dialogs/MaxFileChooser.java,
	because of conflicts with JDK 1.2

	* renamed Package.java to JMaxPackage.java, because of conflict with JDK 1.2 java.lang.Package

Fri Jun  9 15:35:11 2000  Norbert Schnell  <schnell@astor.ircam.fr>

	* fts/src/runtime/midi.h: added fts_midiport abstraction to midiport.*

2000-06-07  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* packages/io/c/src/iomodule.c: fixed missing call to serial_config()
	* packages/unixdtd: new (?) implementation of Direct-To-Disk objects, using
	a separate process (the thread implementation leaded to real-time problems
	on IRIX)
	* packages/unixdtd/src/readsf.c: readsf~ has an extra outlet that bangs when 
	file is finished.

2000-06-06  Norbert Schnell  <schnell@ligeti.ircam.fr>

	* packages/ispw/src/data/table.c: fixed name table bug
	* packages/ispw/src/data/value.c: removed fts_..._named_object feature 
	* packages/ispw/src/sampling/sigtable.c: added messages read and write to system inlet
	* fts_named_object_send: now sending to system inlet

2000-05-26  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* fts/src/runtime/sched/sched.c: fixed in fts_sched_do_select the first argument
	to select() (was n_fd, is now n_fd +1).

Mon May 22 11:57:20 2000  Francois Dechelle  <dechelle@astor.ircam.fr>

	* fts/src/non-portable/sgi/syssched.c: 
	  added code for better use of multi-processor machines: if an isolated processor
	  is found, it is choosed by fts for running on it.

2000-05-15  Norbert Schnell  <schnell@ligeti.ircam.fr>

	* added _FTS before #ifdef pp-commands in all header files

2000-05-09  Norbert Schnell  <schnell@ligeti.ircam.fr>

	* fts/src/runtime/client/incoming.c: fixed memory corruption bug

2000-05-04  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* packages/ispw/src/data/table.c: added save as .pat
	
	* packages/qlist/c/src/qlist.c: added save as .pat

	* added overwrite confirmation dialog in patcher "Save as" in case file already exists.

2000-05-03  Norbert Schnell  <schnell@ligeti.ircam.fr>

	* sigthrow: fixed bug in catch~/throw~

2000-05-03  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* fts: fixing 'save as .pat' methods (messages were not saved correctly)

2000-05-02  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* fts: added stuff for running fts under purify (ENABLE_PURIFY=yes on make command line). 
	See doc/running.html for further indications.

2000-04-28  Norbert Schnell  <schnell@ligeti.ircam.fr>

	* fork object added in packages/guiobj java/.../patcher/objects java/.../fts
	* for object added in packages/control
	* range moved from packages/numeric to packages/control
	* vec object added in packages/data
	* eliminated MAXVS and MINVS in the kernel and packages
	* sched.h: added functions (makros)
	    fts_get_time_in_msecs()
	    fts_get_time_in_ticks()
	    fts_get_tick_size()
	    fts_get_tick_duration()
	* sched.h: added constants
	    FTS_MIN_TICK_SIZE
	    FTS_MAX_TICK_SIZE
	    FTS_DEF_TICK_SIZE

2000-04-27  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* Merged all ChangeLog files in subdirectories.

	* fts and java Makefiles: merged all install-noarch and install-arch targets

	* moved and cleaned the rpm and sgi package building scripts

2000-04-07  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* java: changed files names for too long names (MacOS porting)

2000-04-05  Norbert Schnell  <schnell@ircam.fr>

	* fts: runtime/files/midifile.[ch] Added midifile library based on the code by Tim Thompson

2000-03-31  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* fts: sys/modules.[ch]: removed the restart function (which has never been tested nor used).
	Changed all modules accordingly.

2000-03-30  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* java: removed registration panel and the related code.

	* fts: runtime/sched/* and runtime/thread/*: removing the thread directory
	and integrating it in sched.c. Removed the fts_sched_declare stuff,
	that was uselessly complicated. Moving to the single select() scheduler.

2000-03-27  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* java: changed MaxFileChooser.java to find better the file format combo box.

	* fts: changed patcher.c: moving to save .pat files. This is not complete yet...

	* fts: changed patparser.c: removed the scaling that was applied when loading .pat files.

2000-03-23  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* java: fixed in FtsStream.java an incorrect parsing of SYMBOL_AND_DEF_CODE arguments.
	By the way, the parser in FtsStream.java is to be redone reusing incoming.c

	* java: fixed MaxFileChooser.java and PatcherSaveManager.java, going toward saving as .pat.
	Added the code that changes the file type combo box in order to use it
	for format selection. This has probably fixed the destiny of Mda (it will not resist
	to a client and a server not seeing same files at the same place).

	* java: changed protocol handling: FtsStream.java
	  - the protocol is now binary in both directions.
	  - the symbols are cached in both directions.
	  - the code is cleaner

	* fts: changed protocol handling: runtime/client/incoming.c, runtime/client/outgoing.c
	  - the protocol is now binary in both directions.
	  - the symbols are cached in both directions.
	  - the code is cleaner
	  - some bug fixes (symbol cache miss resulted in an infinite loop...)

2000-03-22  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* fts: changed symbols.[ch]:
	  - introduced predefsymbols.h in order to centralize predefined symbols definition
	  - added doc headers to symbols.h
	  - cleaned code in symbols.c

	* fts: changed outgoing.c:
	  - moved symbol cache handling there
	  - removed useless code
	  - fixed sending symbol as string (which happens when symbol cannot be cached)

2000-03-16  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* java: ircam/fts: changed FtsDatagramStream, trying to fix the
	hostname and rsh problem. Just removed the code:
	    serverName = InetAddress.getLocalHost().getHostName();
	But it is probably not enough, and the server connection
	code must be redone.

2000-03-14  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* java: ircam/fts: added a default implementation of handleMessage
	in FtsObject that is based on Core Reflection API. Added a
	method getArgs() in FtsStream and a class FtsAtom.

2000-02-21  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* java: Makefile (jar): fixed missing silk in jar building

2000-02-21  Francois Dechelle  <dechelle@lipari.ircam.fr>

	* fts: fixed "cannot kill fts without being super-user". This came from a bug in 
	non-portable/sgi/platform.c

	* fts: fixed wrong message "cannot lock memory".
