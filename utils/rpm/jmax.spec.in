# These macros doesn't seems to be defined on RedHat 9
%define ifdef() %if %{expand:%%{?%{1}:1}%%{!?%{1}:0}}
%define ifndef() %if %{expand:%%{?%{1}:0}%%{!?%{1}:1}}

##################################################
# JAVA SETTINGS
##################################################
# We use these macros to set path to java, javac and jar when calling rpmbuild
# Use the --define='' flag of rpmbuild
# e.g:
# rpmbuild --define='javac /usr/java/j2sdk1.4.1_02/bin/javac' --define='java /usr/java/j2sdk1.4.1_02/bin/java' -ba jmax.spec
%ifndef java
%define java java
%endif
%ifndef javac
%define javac javac
%endif
%ifndef jar
%define jar jar
%endif

##################################################
# AGNULA SETTINGS
##################################################
# We use this macros to display the warning about java in case of agnula rpm.
# Use the --define='' flag of rpmbuild to set if you want to package for agnula.
# e.g:
# rpmbuild --define='agnula 1' -ba jmax.spec
%ifndef agnula
%define agnula 0
%endif

%define jmax_name jmax
# If we build for agnula, we postfix the rpm name with agnula.
%if %{agnula} == 0
%define fullname jmax
%else
%define fullname jmax-agnula
%endif

Name: %{fullname}
Summary: a visual programming environment for real-time, interactive multimedia applications
Version: @VERSION@
Release: 1
Copyright: LGPL
Group: Applications/Multimedia
Source: ftp://freesoftware.ircam.fr/pub/jmax/releases/%{version}/jmax-%{version}.tar.gz
BuildRoot: /var/tmp/jmax-%{version}-root
Provides: %{name}-common = %{version}, %{name}-java = %{version}

%if  %{agnula} == 1
Provides: %{jmax_name}-common = %{version}, %{jmax_name}-java = %{version}
%endif

# gnome and kde menu
%define _pixmaps_dir /usr/share/pixmaps
%define desktop_utils   %(if which desktop-file-install 2>&1 >/dev/null ; then echo "yes" ; fi)
%define vendor_name ircam

%description
jMax is a visual programming environment for developing real-time, interactive multimedia applications. 
%if %{agnula} == 1
#======================================================================
IMPORTANT WARNING: Even though the <jmax-java> package itself is
licensed as Free Software under the GNU General Public License (GPL),
it depends upon a proprietary Java runtime environment, so in order
to be able to use it, you would also have to find, install and run
proprietary software.
The AGNULA consortium only provides the package for completeness
reference or reimplementation purposes.
There are freedom-preserving alternatives to this package and we
encourage you to choose those instead, namely the <jmax-bindings>
Python bindings.
Should you choose to proceed, information about the Java Runtime
Environments is available at
 http://www.ircam.fr/jmax
Information about the Java situation and its problems along with
the efforts to finally Free Java are available at
 http://fsfeurope.org/projects/agnula/java.html
#Are you sure you wish to proceed? (yes/NO)
#======================================================================
%endif

%package common
Summary: Kernel of JMax
Group: Application/Multimedia
%if %{agnula} == 1
Provides: %{jmax_name}-common = %{version}
%endif
%description common
jMax FTS kernel

%package devel
Summary: Header files for jMax
Group: Development/Libraries
Requires: %{name}-common = %{version} 
%if %{agnula} == 1
Provides: %{jmax_name}-devel = %{version}
%endif
%description devel
Header files for jMax

%package java
Summary: Java gui for jMax
Group: Applications/Multimedia
Requires: %{name}-common = %{version}
%if %{agnula} == 1
Provides: %{jmax_name}-java = %{version}
%endif
%description java
Java Graphical User Interface for jMax
%if %{agnula} == 1
#======================================================================
IMPORTANT WARNING: Even though the <jmax-java> package itself is
licensed as Free Software under the GNU General Public License (GPL),
it depends upon a proprietary Java runtime environment, so in order
to be able to use it, you would also have to find, install and run
proprietary software.
The AGNULA consortium only provides the package for completeness
reference or reimplementation purposes.
There are freedom-preserving alternatives to this package and we
encourage you to choose those instead, namely the <jmax-bindings>
Python bindings.
Should you choose to proceed, information about the Java Runtime
Environments is available at
 http://www.ircam.fr/jmax
Information about the Java situation and its problems along with
the efforts to finally Free Java are available at
 http://fsfeurope.org/projects/agnula/java.html
#Are you sure you wish to proceed? (yes/NO)
#======================================================================
%endif

%package client
Summary: Client for jMax
Group: Applications/Multimedia
%if %{agnula} == 1
Provides: %{jmax_name}-client = %{version}
%endif
%description client
Contains C++ and Python client for jMax

%package jack
Summary: Jack Audio Connection Kit support for jMax
Group: Applications/Multimedia
Requires: jack-audio-connection-kit, %{name}-common = %{version}
%if %{agnula} == 1
Provides: %{jmax_name}-jack = %{version}
%endif
%description jack
Jack Audio Connection Kit support for jMax

%prep
%setup -n jmax-%{version}
%build
# Use the --define='' flag of rpmbuild to set which java, javac and jar to use.
# e.g:
# rpmbuild --define='javac /usr/java/j2sdk1.4.1_02/bin/javac' --define='java /usr/java/j2sdk1.4.1_02/bin/java' -ba jmax.spec
./configure --with-java=%{java} --with-javac=%{javac} --with-jar=%{jar} --enable-jack
make

%install
rm -f /var/tmp/rpm.jmax.common.list
rm -f /var/tmp/rpm.jmax.java.list
rm -f /var/tmp/rpm.jmax.global.list
rm -rf $RPM_BUILD_ROOT

make DESTDIR=$RPM_BUILD_ROOT install

# remove jack to avoid libjack dependency in jmax package and common subpackage
find $RPM_BUILD_ROOT%{_libdir}/jmax ! -type d ! -name "*.jar"| grep -v "jack" | sed "s|$RPM_BUILD_ROOT||g" >> /var/tmp/rpm.jmax.common.list

# for java rpm
find $RPM_BUILD_ROOT%{_libdir}/jmax -name "*.jar" | sed "s|$RPM_BUILD_ROOT||g" >> /var/tmp/rpm.jmax.java.list

# for global rpm (without jack support)
cat /var/tmp/rpm.jmax.java.list /var/tmp/rpm.jmax.common.list >> /var/tmp/rpm.jmax.global.list


# jMax icons
mkdir -p $RPM_BUILD_ROOT%{_pixmaps_dir}
install -c -m 644 ./images/jmax_icon_48x48.png $RPM_BUILD_ROOT%{_pixmaps_dir}/jmax_icon.png

%if %{agnula} == 1
mv ./utils/linux_desktop/%{jmax_name}.desktop ./utils/linux_desktop/%{name}.desktop
%endif

%if "%{desktop_utils}" == "yes"
  mkdir -p %{buildroot}%{_datadir}/applications
  desktop-file-install --vendor %{vendor_name}  \
    --dir %{buildroot}%{_datadir}/applications    \
    --add-category X-Red-Hat-Base                 \
    --add-category Application                    \
    --add-category AudioVideo                     \
    ./utils/linux_desktop/%{name}.desktop
%else
  install -d $RPM_BUILD_ROOT%{_sysconfdir}/X11/applnk/Multimedia
  install ./utils/linux_desktop/%{name}.desktop $RPM_BUILD_ROOT%{_sysconfdir}/X11/applnk/Multimedia/
%endif


%clean
# Clean build root (where jmax is compiled)
rm -rf $RPM_BUILD_ROOT
# Clean files used for subpackages file list.
rm -f /var/tmp/rpm.jmax.common.list
rm -f /var/tmp/rpm.jmax.java.list
rm -f /var/tmp/rpm.jmax.global.list
# Removed sources 
rm -rf $RPM_BUILD_DIR/jmax-%{version}

%if %{agnula} == 1
%pre java
# In case of agnula, we need to display a warning message about jmax-java.
cat << EOF > $RPM_BUILD_ROOT/$$
======================================================================
IMPORTANT WARNING: Even though the <jmax-java> package itself is
licensed as Free Software under the GNU General Public License (GPL),
it depends upon a proprietary Java runtime environment, so in order
to be able to use it, you would also have to find, install and run
proprietary software.
The AGNULA consortium only provides the package for completeness
reference or reimplementation purposes.
There are freedom-preserving alternatives to this package and we
encourage you to choose those instead, namely the <jmax-bindings>
Python bindings.
Should you choose to proceed, information about the Java Runtime
Environments is available at
 http://www.ircam.fr/jmax
Information about the Java situation and its problems along with
the efforts to finally Free Java are available at
 http://fsfeurope.org/projects/agnula/java.html
Are you sure you wish to proceed?
======================================================================
EOF
#display a dialog box
dialog --yesno "`cat $RPM_BUILD_ROOT/$$`" 120 120
if [ $? -eq 1 ]; then
	clear
	rm -f $RPM_BUILD_ROOT/$$	
	# Stop installation of jmax-java
	exit 1;
else
	clear
	rm -f $RPM_BUILD_ROOT/$$
fi

%endif

%post

%files -f /var/tmp/rpm.jmax.global.list
%defattr(-, root, root)
%doc COPYING README AUTHORS ChangeLog doc/*
%{_bindir}/jmax
%attr(4755, root, root) %{_bindir}/fts
%{_libdir}/libfts-%{version}.so
%{_libdir}/libfts.so
%if "%{desktop_utils}" == "yes"
%{_datadir}/applications/%{vendor_name}-%{name}.desktop
%else
%attr(644,root,root) %{_sysconfdir}/X11/applnk/Multimedia/%{name}.desktop
%endif
%{_pixmaps_dir}/*
%{_datadir}/aclocal/*


%files common -f /var/tmp/rpm.jmax.common.list
%defattr(-,root,root)
%attr(4755, root, root) %{_bindir}/fts
%{_libdir}/libfts-%{version}.so
%{_libdir}/libfts.so


%files devel
%defattr(-,root,root)
%{_bindir}/jmax-config
%{_includedir}/fts/*.h
%{_includedir}/fts/packages
%{_libdir}/libfts.la
%{_libdir}/pkgconfig/jmax.pc
%{_datadir}/aclocal/*

%files java -f /var/tmp/rpm.jmax.java.list
%defattr(-,root,root)
%{_bindir}/jmax

%files client
%defattr(-,root,root)
%{_includedir}/fts/client
%{_libdir}/libftsclient*.*
%{_libdir}/jmax/client/python

%files jack
%defattr(-,root,root)
%{_libdir}/jmax/packages/jack

%changelog
* Mon Oct 13 2003 Patrice Tisserand <Patrice.Tisserand@ircam.fr>
- added java warning in description when building for AGNULA.
- added dialog display when installing AGNULA version of jmax-java.
- move definitions to top of this file.
- fixed file list for jmax-client package.
* Thu Jul 24 2003 Patrice Tisserand <Patrice.Tisserand@ircam.fr>
- added macros to set path for java, javac and jar. (use --define='java path_to_java' when calling rpmbuild).
- removed obsolete files (LICENCE.fr, LICENSE).
- added new licence file COPYING.
- added ChangeLog and AUTHORS in doc directory.
- reflected change of package installation directory.
* Wed May 28 2003 Patrice Tisserand <Patrice.Tisserand@ircam.fr>
- removed file list in %clean script
- removed directory created when sources are extracted from tarball
* Thu May 22 2003 Patrice Tisserand <Patrice.Tisserand@ircam.fr>
- added installation of jmax.m4 
* Wed Mar  5 2003 Patrice Tisserand <Patrice.Tisserand@ircam.fr>
- add jMax in RedHat 8.0 menu
* Mon Mar  3 2003 Patrice Tisserand <Patrice.Tisserand@ircam.fr>
- add icon for jMax in KDE and GNOME menus
- add suid flag for %{_bindir}/fts
- fix common files list
* Fri Feb 28 2003 Patrice Tisserand <Patrice.Tisserand@ircam.fr>
- add jMax in KDE and GNOME menus
* Fri Feb  7 2003 Patrice Tisserand <Patrice.Tisserand@ircam.fr>
- remove client C++ headers from devel subpackage
- add jack subpackage building
- remove dependency between jmax and libjack
- add dependency between subpackages
* Thu Feb  6 2003 Patrice Tisserand <Patrice.Tisserand@ircam.fr>
- add building of client sub package
* Thu Nov 21 2002 Patrice Tisserand <Patrice.Tisserand@ircam.fr>
- first set up for multi rpm building

