#!/bin/sh
# This script builds a SGI package.
#

# jMax version
JMAX_VERSION=2.5.3

# Defaults
DEFAULT_BUILD_DIR=/data/jmax-build/src
DEFAULT_MAKE=/usr/freeware/bin/gmake

# Constants
DISTFILE=jmax-$JMAX_VERSION-src.tar.gz
SRCROOTDIR=jmax-$JMAX_VERSION
TMP_IDB_SORTED=/tmp/$$.idb.sorted
TMP_SPEC=/tmp/$$.pkgdef
SPEC_FILE=jmax.pkgdef

# ---------------------------------------------------------------------------
help ()
{
    cat <<EOF
Usage:
 buildpkg [-a|--arch ARCH] [-b|--builddir DIR] [-m|--make MAKE]

Builds a SGI package

Options and arguments:

 -a | --arch ARCH
    Specifies the building architecture (r10k-irix6.5, r5k-irix6.5)
    Defaults to system architecture (extracted from command 'uname -m')

 -b | --builddir DIR
    Specifies the building directory
    Defaults to $DEFAULT_BUILD_DIR

 -m | --make MAKE
    Specifies which make command to use.
    Defaults to $DEFAULT_MAKE

EOF
}

# ---------------------------------------------------------------------------
decrypt_options ()
{
    opt="none"
    BUILD_DIR=$DEFAULT_BUILD_DIR
    ARCH=
    MAKE=$DEFAULT_MAKE

    for arg in $@
    do
	if [ $opt = "none" ]
	then
	    case $arg in
	    \-b | \-\-builddir | \-a | \-\-arch | \-m | \-\-make )
		opt=$arg ;;
	    \-help | \-h | \-\? )
		help ;
		exit 2 ;;
	    *)
		help ; exit 2 ;;
	    esac
	else
	    case $opt in
	    \-b | \-\-builddir )
		BUILD_DIR=$arg ;;
	    \-a | \-\-arch)
		ARCH=$arg ;;
	    \-m | \-\-make)
		MAKE=$arg ;;
	    esac
	    opt="none";
	fi

    done
}

# ---------------------------------------------------------------------------
# Guess architecture
guess_arch ()
{
    if [ _${ARCH}_ = __ ]
    then
	case `uname -m` in
	IP27) ARCH=r10k-irix6.5 ;;
	IP32) ARCH=r5k-irix6.5 ;;
	esac
    fi
}


# ---------------------------------------------------------------------------
build_it ()
{
    set -ex

    /bin/rm -rf $BUILD_DIR
    mkdir -p $BUILD_DIR

    gzip -cd $DISTFILE | (cd $BUILD_DIR ; tar xvf -)

    cp $SPEC_FILE $TMP_SPEC

    ( 
	cd $BUILD_DIR/jmax-$JMAX_VERSION
	$MAKE ARCH=$ARCH all

	RAWIDB=/tmp/$$.idb
	export RAWIDB
	$MAKE ARCH=$ARCH INSTALL="install -idb ALL" install
	sort +4u -6 < $RAWIDB | awk '{ printf( "%s %s %s %s %c%s%c %c%s%c %s\n", $1, $2, $3, $4, 39, $5, 39, 39, $6, 39, $7); }' > $TMP_IDB_SORTED
	/usr/sbin/gendist -root .. -sbase .. -dist .. -idb $TMP_IDB_SORTED -spec $TMP_SPEC
	/bin/rm -f $RAWIDB $TMP_IDB_SORTED $TMP_SPEC
    )

    TARDIST=jmax-$JMAX_VERSION.$ARCH.tardist

    ( cd $BUILD_DIR ; tar cvf - jmax jmax.idb jmax.sw ) > $TARDIST
    chmod 644 $TARDIST

    /bin/rm -rf $BUILD_DIR
}


# ---------------------------------------------------------------------------

decrypt_options $@

guess_arch

build_it
