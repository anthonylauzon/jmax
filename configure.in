dnl
dnl Process this file with autoconf to produce a configure script
dnl 

AC_INIT(fts/version.c.in)

. $srcdir/JMAX-VERSION
JMAX_VERSION=${JMAX_MAJOR_VERSION}.${JMAX_MINOR_VERSION}.${JMAX_PATCH_VERSION}${JMAX_VERSION_STATUS}

VERSION=${JMAX_VERSION}
PACKAGE=jmax

AM_INIT_AUTOMAKE(${PACKAGE},${JMAX_VERSION})
AC_SUBST(JMAX_VERSION)

AC_PREFIX_DEFAULT(/usr)

AM_CONFIG_HEADER(include/ftsconfig-ac.h)

dnl Guess the host
AC_CANONICAL_HOST

dnl Checks for programs.
AC_PROG_CC
if test "$ac_cv_prog_cc" = "no" ; then
   AC_MSG_ERROR([*** No C compiler])
fi
AC_ISC_POSIX
AC_PROG_INSTALL

dnl Check for libtool
AC_LIBTOOL_DLOPEN
AC_DISABLE_STATIC
AC_PROG_LIBTOOL

dnl Checks for libraries.
AC_CHECK_LIB(m, sin)
AC_CHECK_FUNCS(sinf cosf tanf asinf acosf atanf expf logf log10f fabsf atan2f sqrtf qsort_r signbit)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS( sys/param.h unistd.h alloca.h sys/time.h time.h sys/socket.h netinet/in.h netinet/tcp.h arpa/inet.h netdb.h sys/signal.h sys/types.h pthread.h dirent.h)


dnl Checks for library functions.
AC_CHECK_FUNCS(socket)
AC_CHECK_FUNCS(signal)
AC_CHECK_FUNCS(realpath)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_BIGENDIAN

dnl map result or include/fts/config-ac.h
if test $ac_cv_c_bigendian = yes; then
FTS_CONFIG_BYTE_ORDER=FTS_CONFIG_BIGENDIAN
else
FTS_CONFIG_BYTE_ORDER=FTS_CONFIG_LITTLEENDIAN
fi
AC_SUBST(FTS_CONFIG_BYTE_ORDER)

dnl Check for lex/flex and yacc/bison
AM_PROG_LEX
AC_PROG_YACC

dnl ##############################
dnl DEBUG OPTION
dnl ##############################
dnl Check for debug
AC_ARG_ENABLE(debug,
  [  --enable-debug[=value]   compile with debug [default=no]],
  with_debug="yes",
  with_debug="no")
if test "$with_debug" = "yes"
then
  AC_DEFINE(DEBUG,1,[Define to enable debug])
  CFLAGS="$CFLAGS -g"
fi

dnl Check for profiling
AC_ARG_ENABLE(cprof,
  [ --enable-cprof[=value]    compile with cprof support [default=no]],
  [with_cprof="yes"])
if test "x$with_cprof" = "xyes"
then
  dnl Check for cprof library
  AC_CHECK_LIB(cprof, profile_on,
  [ lib_cprof_found="true"],
  [ lib_cprof_found="false"])
  dnl Check result of cpprof library
  if test "x$lib_cprof_found" != "xtrue"; then
     AC_MSG_ERROR([*** cprof library not found ***])
  else
     CFLAGS="$CFLAGS -finstrument-functions"
     LDFLAGS="$LDFLAGS -lcprof"
  fi
fi

dnl Check for FPE 
AC_ARG_ENABLE(fpe,
  [ --enable-fpe[=value]      compile with FPE handling enable [default=no]],
  with_fpe="yes",
  with_fpe="no")
if test "$with_fpe" = "yes"
then
  CFLAGS="$CFLAGS -DUSE_FPE"
fi

dnl ##############################
dnl END OF DEBUG OPTION
dnl ##############################


dnl ###########################################################################
dnl JAVA
dnl ###########################################################################
dnl Want to compile java?
want_java_compilation="yes"
AC_ARG_ENABLE(java-compilation,
[
  --enable-java-compilation[=value] compile jMax java part [default=yes]],
  [case "${enableval}" in
	yes) want_java_compilation="yes" ;;
	no)  want_java_compilation="no" ;;
	*) AC_MSG_ERROR(bad value ${enableval} for --enable-java-compilation) ;;
  esac],
  [want_java_compilation="yes"])	    

AM_CONDITIONAL(COND_COMPILE_JAVA, test "$want_java_compilation" = "yes")

if test "$want_java_compilation" = "yes" 
then
dnl Check for Java compiler
AC_ARG_WITH(javac,
  [  --with-javac=JAVAC       give java compiler (optional)],
  [JAVAC="$withval"])
AC_ARG_WITH(java,
  [  --with-java=JAVA         give java virtual machine (optional)],
  [JAVA="$withval"])
AC_ARG_WITH(jar,
  [  --with-jar=JAR	      give jar executable (optional)],
  [ JAR="$withval"],
  [ JAR="jar"])	
AC_SUBST(JAR)

dnl Test if jar is in path
AC_PROG_JAR

dnl Check if jar support "-u" flag
AC_PROG_JAR_UPDATE
if test "$ac_cv_prog_jar_update" = "yes"; then
   JAR_SUPPORT_UPDATE="yes"
else
   AC_MSG_WARN($JAR doesn't support update flag)
  JAR_SUPPORT_UPDATE="no"
fi


dnl Check if we have additionnal classpath
ADD_CLASSPATH=""
AC_ARG_WITH(classpath,
  [  --with-classpath=CLASSPATH	additionnal classpath (optionnal)],
  [ ADD_CLASSPATH="$withval"])

dnl Here we buld the content of classpath, which will be:
dnl current directory
dnl additionnal classpath
dnl classpath defined in environment variable
if test "x$ADD_CLASSPATH" = "x"; then
   JAVAFLAGS="$JAVAFLAGS -classpath ."
else
   JAVAFLAGS="$JAVAFLAGS -classpath .:$ADD_CLASSPATH"
fi
if test "x$CLASSPATH" != "x"; then
   JAVAFLAGS="$JAVAFLAGS:$CLASSPATH"
fi


dnl Check if version of java is enough
AC_CHECK_JAVA_VERSION("1.4.0")
if test "$ac_cv_check_java_version" = "no"; then
   AC_MSG_ERROR([jMax requires at least java 1.4.0])
fi

AC_SUBST(JAR_SUPPORT_UPDATE)

AC_SUBST(JAVAC)
AC_SUBST(JAVA)
AC_PROG_JAVAC
AC_PROG_JAVA
AC_TRY_RUN_JAVA
dnl Check for swing
AC_CHECK_CLASS(javax.swing.JButton)
  if test "$ac_cv_class_javax_swing_JButton" = no
  then
  AC_MSG_ERROR([swing is not available with this java compiler, check your classpath or use the --with-javac flag])
  fi


JAVACX=$JAVAC
AC_SUBST(JAVACX)
JAVACFLAGSX=
if test "$with_debug" = "yes"
then
  JAVACFLAGSX="$JAVACFLAGSX -g"
fi
AC_SUBST(JAVACFLAGSX)

fi

dnl Check for memory allocation debug
AC_ARG_ENABLE(check_memory,
  [  --enable-check-memory[=value]   compile with -fcheck-memory-usage [default=no]],
  check_memory="yes",
  check_memory="no")

dnl Check for libtool version
dnl Carefull: the character set in sed substitute is eaten by m4, so we must change quoting
dnl (autoconf manual, section 7.3 quoting)
AC_MSG_CHECKING( "for libtool major version")
changequote(<<,>>)dnl
libtool_major_version=`grep "VERSION=" ltmain.sh | sed 's/VERSION=//' | sed 's/\([0-9][0-9]*\)\..*/\1/'`
changequote([,])dnl
AC_MSG_RESULT( "$libtool_major_version")
AC_MSG_CHECKING( "for libtool minor version")
changequote(<<,>>)dnl
libtool_minor_version=`grep "VERSION=" ltmain.sh | sed 's/VERSION=//' | sed 's/[0-9][0-9]*\.\([0-9][0-9]*\)\(\.[0-9][0-9]*\)*/\1/'`
changequote([,])dnl
AC_MSG_RESULT( "$libtool_minor_version")
if test "$libtool_major_version" -le 1 -a "$libtool_minor_version" -lt 4 ; then DOT_LIBS=-L.libs ; fi
AC_SUBST(DOT_LIBS)

dnl Checking if user compile with a sound support
HAVE_A_SOUND_SUPPORT="false"

dnl Set platform specifics
case "$host" in

dnl GNU/Linux on an Intel or compatible
*86*-linux*|powerpc-*-linux-gnu)
PLATFORM=linux
CFLAGS="$CFLAGS -Wall -Wno-unused"
if test "$with_debug" != "yes"
then
  CFLAGS="$CFLAGS -O3 -funroll-loops -fmove-all-movables -fstrict-aliasing"
fi
if test "$check_memory" = "yes"
then
  CFLAGS="$CFLAGS -fcheck-memory-usage"
fi
dnl Platform specific CFLAGS
case "$host" in
dnl i*86-*-linux*) CFLAGS="$CFLAGS -mpentiumpro" ;;
i*86-*-linux*) CFLAGS="$CFLAGS" ;;
esac

PLATFORM_PACKAGES="oss"

# AM_PATH_AUDIOFILE(0.0.2,[PLATFORM_PACKAGES="aflib $PLATFORM_PACKAGES"],[echo package aflib will not be build])
AM_PATH_ALSA(0.9.0,[
	DEFAULT_CONFIG_FILE=default_config_linux_alsa.jcfg
	PLATFORM_PACKAGES="alsa $PLATFORM_PACKAGES"
	CFLAGS="$CFLAGS -DUSE_ALSA"
	HAVE_A_SOUND_SUPPORT="true"
],[
	DEFAULT_CONFIG_FILE=default_config_linux_oss.jcfg
])

FTS_SYS_LIBS="-ldl -lpthread `test $check_memory = yes && echo -lmpatrol -lbfd -liberty`"
ACX_C_RESTRICT
;;

mips-sgi-irix6.5)
PLATFORM=sgi
CFLAGS="$CFLAGS -mips4 -n32 -r10000 -LANG:restrict"
if test "$with_debug" != "yes"
then
  CFLAGS="$CFLAGS -O3 -OPT:roundoff=3:IEEE_arithmetic=3:alias=typed:Olimit=0 -TARG:platform=ip27:processor=r10000 -float_const -INLINE:=ON:dfe=ON  -LNO:opt=1"
fi
PLATFORM_PACKAGES="sgi"
FTS_SYS_LIBS="-ldl"
ACX_C_RESTRICT
;;

powerpc-apple-darwin*)
PLATFORM=macosx
CFLAGS="$CFLAGS -Wall -Wno-unused"
if test "$with_debug" != "yes"
then
  dnl Functions inlining may result in bad code generation (http://developer.apple.com/techpubs/macosx/Essentials/Performance/Languages/Automated_C_ptimization.html)
  CFLAGS="$CFLAGS -O3 -funroll-loops -fno-inline"
fi
PLATFORM_PACKAGES="macosx"
dnl Hack for problem of restrict finding (cc makes an error but does not return correct error code) 
AC_DEFINE(restrict,)
;;

esac

FTS_DEFINE_RESTRICT=""
if test "$acx_cv_restrict" != "restrict"; then
   acx_kw="$acx_cv_c_restrict"
   if test "$acx_kw" = unsupported; then acx_kw=""; fi
   FTS_DEFINE_RESTRICT="#define restrict $acx_kw"
fi
AC_SUBST(FTS_DEFINE_RESTRICT)

AC_SUBST(PLATFORM)
AC_SUBST(PLATFORM_PACKAGES)
AC_SUBST(FTS_SYS_LIBS)


FTSDIR=${bindir}
dnl Packages are now installed in pkglibdir/jmax/package_name
ROOTDIR="${libdir}/jmax"


dnl dnl Check installation directories
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(DEFAULT_ROOT, "${ac_default_prefix}/lib/jmax")
else
  AC_DEFINE_UNQUOTED(DEFAULT_ROOT, "${prefix}/lib/jmax")
fi

AC_SUBST(FTSDIR)
AC_SUBST(ROOTDIR)



dnl ###########################################################################
dnl check for pkg-config
AC_PATH_PROG(PKG_CONFIG,pkg-config,no)


dnl ###########################################################################
dnl choice of JACK package
dnl ###########################################################################
with_jack="no"
AC_ARG_ENABLE(jack, dnl newline and indentation:
[ 
  --enable-jack[=value]	compile jack package [default=no]],
  with_jack="$enableval",
  with_jack="no")


dnl options to find JACK header and JACK library 
AC_ARG_WITH(jack-cflags,
  [  --with-jack-cflags=JACK_CFLAGS	jack support cflags (optional)],
  [JACK_CFLAGS="$withval";
  with_jack="yes";],
  [ if test "$with_jack" = "yes"; then
       if test $PKG_CONFIG != "no"; then
	  JACK_CFLAGS=`$PKG_CONFIG --cflags jack`;
       fi
    fi])

dnl If --with-jack-ldflags is not given and pkg-config has not been foun
dnl we set JACK_LDFLAGS with the default output of pkg-config --libs jack 
dnl This default is given by jack-audio-connection-kit-devel-0.80.0-1-rh90
dnl from PlanetCCRMA
AC_ARG_WITH(jack-ldflags,
  [  --with-jack-ldflags=JACK_LDFLAGS	jack support ldflags (optional)],
  [JACK_LDFLAGS="$withval";
  with_jack="yes";],
  [ if test "$with_jack" = "yes"; then
       if test $PKG_CONFIG != "no"; then
	  JACK_LDFLAGS=`$PKG_CONFIG --libs jack`;
       else
          JACK_LDFLAGS="-ljack -lpthread -ldl -lrt";
       fi
    fi])

HAVE_LIB_JACK="false"
CAN_COMPILE_WITH_JACK="false"
dnl output JACK feature
if test "$with_jack" = "yes"
then
	dnl TODO: add a jack test here
	dnl Use JACK_CFLAGS and JACK_LDFLAGS before testing
	dnl Store current value of CPPFLAGS, CFLAGS, CXXFLAGS and LDFLAGS
	tmp_CPPFKLAGS="$CPPFLAGS"
	tmp_CFLAGS="$CFLAGS"
	tmp_CXXFLAGS="$CXXFLAGS"
	tmp_LDFLAGS="$LDFLAGS"
	tmp_LIBS="$LIBS"

	dnl Set new value of CPPFLAGS, CFLAGS, CXXFLAGS and LDFLAGS
	CPPFLAGS="$JACK_CFLAGS"
	LDFLAGS="$JACK_LDFLAGS"
	LIBS="$JACK_LDFLAGS"

	dnl check if jack headeris installed
	AC_CHECK_HEADER(jack/jack.h, dnl header to check
	[HAVE_JACK_H="true"],         dnl action-if-found
	[HAVE_JACK_H="false"])        dnl action-if-not-found
	dnl Check result value of test
	if test "$HAVE_JACK_H" != "true"; then
	   AC_MSG_ERROR([*** jack/jack.h not found ***])
	fi

	dnl check if jack library is installed
	AC_CHECK_LIB(jack,jack_client_new,
	[ HAVE_LIB_JACK="true"],
	[ HAVE_LIB_JACK="false"])
	dnl Check result value of test
	if test "$HAVE_LIB_JACK" != "true"; then
	   AC_MSG_ERROR([*** jack library not found ***])
	fi

	dnl Really check if we can compile with jack
	AC_CHECK_FUNC(jack_get_ports,
	[ CAN_COMPILE_WITH_JACK="true"],
	[ CAN_COMPILE_WITH_JACK="false"])
	dnl Check value of test
	if test "$CAN_COMPILE_WITH_JACK" != "true"; then
	   AC_MSG_ERROR([*** compilation with jack failed, if you haven't installed pkg-config, you should use --with-jack-cflags and --with-jack-ldflags ***])
	fi

	dnl Reset value of CPPFLAGS, CFLAGS, CXXFLAGS and LDFLAGS
	CPPFLAGS="$tmp_CPPFKLAGS"
	CFLAGS="$tmp_CFLAGS"
	CXXFLAGS="$tmp_CXXFLAGS"
	LDFLAGS="$tmp_LDFLAGS"
	LIBS="$tmp_LIBS"
	dnl Set default project and AUDIO/MIDI configuration file
	DEFAULT_CONFIG_FILE=default_config_linux_jack.jcfg
	dnl define USE_JACK for preprocessor conditionnal in linux.c fts_platform_init
	CFLAGS="$CFLAGS -DUSE_JACK"
fi
		
dnl Add jack in packages to compile	
AM_CONDITIONAL(COND_COMPILE_JACK, test "$HAVE_LIB_JACK" = "true")	

AC_SUBST(JACK_CFLAGS)
AC_SUBST(JACK_LDFLAGS)

dnl Refresh sound support
if test "$HAVE_LIB_JACK" = "true"; then
   HAVE_A_SOUND_SUPPORT="true"
fi

dnl ###########################################################################
dnl choice of MidiShare package
dnl ###########################################################################
with_midishare="no"
AC_ARG_ENABLE(midishare, dnl newline and indentation:
[ 
  --enable-midishare[=value]	compile midishare package [default=no]],
  with_midishare="$enableval",
  with_midishare="no")


dnl options to find Midishare header and Midishare library 
AC_ARG_WITH(midishare-cflags,
  [  --with-midishare-cflags=MIDISHARE_CFLAGS	MidiShare support cflags (optional)],
  [MIDISHARE_CFLAGS="$withval";
  with_midishare="yes";]
  )

AC_ARG_WITH(midishare-ldflags,
  [  --with-midishare-ldflags=MIDISHARE_LDFLAGS	Midishare support ldflags (optional)],
  [MIDISHARE_LDFLAGS="$withval";
  with_midishare="yes";],
  MIDISHARE_LDFLAGS="-lMidiShare"
  )

HAVE_LIB_MIDISHARE="false"
dnl output MidiShare feature
if test "$with_midishare" = "yes"
then
	dnl Store current value of CPPFLAGS, CFLAGS, CXXFLAGS and LDFLAGS
	tmp_CPPFKLAGS="$CPPFLAGS"
	tmp_CFLAGS="$CFLAGS"
	tmp_CXXFLAGS="$CXXFLAGS"
	tmp_LDFLAGS="$LDFLAGS"
	tmp_LIBS="$LIBS"

	dnl Set new value of CPPFLAGS, CFLAGS, CXXFLAGS and LDFLAGS
	CPPFLAGS="$MIDISHARE_CFLAGS"
	LDFLAGS="$MIDISHARE_LDFLAGS"
	LIBS="$MIDISHARE_LDFLAGS"

	dnl check if jack headeris installed
	AC_CHECK_HEADER(MidiShare.h, dnl header to check
	[HAVE_MIDISHARE_H="true"],         dnl action-if-found
	[HAVE_MIDISHARE_H="false"])        dnl action-if-not-found
	dnl Check result value of test
	if test "$HAVE_MIDISHARE_H" != "true"; then
	   AC_MSG_ERROR([*** Midishare.h not found ***])
	fi

	dnl check if MidiShare library is installed
	AC_CHECK_LIB(MidiShare,MidiCountEvs,
	[ HAVE_LIB_MIDISHARE="true"],
	[ HAVE_LIB_MIDISHARE="false"])
	dnl Check result value of test
	if test "$HAVE_LIB_MIDISHARE" != "true"; then
	   AC_MSG_ERROR([*** MidiShare library not found ***])
	fi

	dnl Reset value of CPPFLAGS, CFLAGS, CXXFLAGS and LDFLAGS
	CPPFLAGS="$tmp_CPPFKLAGS"
	CFLAGS="$tmp_CFLAGS"
	CXXFLAGS="$tmp_CXXFLAGS"
	LDFLAGS="$tmp_LDFLAGS"
	LIBS="$tmp_LIBS"
fi
		
dnl Add Midishare in packages to compile	
AM_CONDITIONAL(COND_COMPILE_MIDISHARE, test "$HAVE_LIB_MIDISHARE" = "true")	

dnl Midishare support
AC_SUBST(MIDISHARE_CFLAGS)
AC_SUBST(MIDISHARE_LDFLAGS)


AC_SUBST(DEFAULT_CONFIG_FILE)

dnl ###########################################################################
dnl Check for doxygen
dnl ###########################################################################
AC_CHECK_PROG(HAVE_DOXYGEN, doxygen, "yes", "no")
AM_CONDITIONAL(COND_DOXYGEN, test "$HAVE_DOXYGEN" = "yes")


dnl Run configure in subdirectories
AC_CONFIG_SUBDIRS(client)

AC_OUTPUT(
Makefile
fts/Makefile
fts/version.c
include/Makefile
include/fts/Makefile
include/fts/config-ac.h
include/ftsprivate/Makefile
bin/Makefile
bin/jmax
config/Makefile
doc/Makefile
doc/api/Makefile
doc/images/Makefile
images/Makefile
help/Makefile
tutorials/Makefile
tutorials/basics/Makefile
java/Makefile
java/src/Makefile
java/src/ircam/Makefile
java/src/ircam/jmax/JMaxVersion.java
java/src/ircam/jmax/Makefile
java/src/ircam/jmax/dialogs/Makefile
java/src/ircam/jmax/editors/Makefile
java/src/ircam/jmax/editors/configuration/Makefile
java/src/ircam/jmax/editors/console/Makefile
java/src/ircam/jmax/editors/patcher/Makefile
java/src/ircam/jmax/editors/patcher/actions/Makefile
java/src/ircam/jmax/editors/patcher/interactions/Makefile
java/src/ircam/jmax/editors/patcher/menus/Makefile
java/src/ircam/jmax/editors/patcher/objects/Makefile
java/src/ircam/jmax/editors/project/Makefile
java/src/ircam/jmax/fts/Makefile
java/src/ircam/jmax/toolkit/Makefile
java/src/ircam/jmax/toolkit/actions/Makefile
java/src/ircam/jmax/toolkit/menus/Makefile
java/src/ircam/jmax/widgets/Makefile
macosxbuild/Makefile
macosxbuild/jMaxProject/Makefile
macosxbuild/jMaxProject/jMaxProject.pbproj/Makefile
macosxbuild/jMaxProject/jMaxProject.xcode/Makefile
packages/Makefile
packages/alsa/Makefile
packages/alsa/c/Makefile
packages/alsa/c/src/Makefile
packages/aflib/Makefile
packages/aflib/c/Makefile
packages/aflib/c/src/Makefile
packages/asio/Makefile
packages/asio/c/Makefile
packages/asio/c/src/Makefile
packages/control/Makefile
packages/control/c/Makefile
packages/control/c/src/Makefile
packages/control/help/Makefile
packages/control/winbuild/Makefile
packages/data/Makefile
packages/data/c/Makefile
packages/data/c/include/Makefile
packages/data/c/include/fts/Makefile
packages/data/c/include/fts/packages/Makefile
packages/data/c/include/fts/packages/data/Makefile
packages/data/c/src/Makefile
packages/data/java/Makefile
packages/data/java/ircam/Makefile
packages/data/java/ircam/jmax/Makefile
packages/data/java/ircam/jmax/editors/Makefile
packages/data/java/ircam/jmax/editors/bpf/Makefile
packages/data/java/ircam/jmax/editors/bpf/renderers/Makefile
packages/data/java/ircam/jmax/editors/bpf/tools/Makefile
packages/data/java/ircam/jmax/editors/mat/Makefile
packages/data/java/ircam/jmax/editors/table/Makefile
packages/data/java/ircam/jmax/editors/table/menus/Makefile
packages/data/java/ircam/jmax/editors/table/renderers/Makefile
packages/data/java/ircam/jmax/editors/table/tools/Makefile
packages/data/help/Makefile
packages/data/images/Makefile
packages/data/winbuild/Makefile
packages/dsdev/Makefile
packages/dsdev/c/Makefile
packages/dsdev/c/src/Makefile
packages/dsdev/winbuild/Makefile
packages/dtd/Makefile
packages/dtd/c/Makefile
packages/dtd/c/src/Makefile
packages/functions/Makefile
packages/functions/c/Makefile
packages/functions/c/src/Makefile
packages/functions/help/Makefile
packages/functions/winbuild/Makefile
packages/guiobj/Makefile
packages/guiobj/c/Makefile
packages/guiobj/c/src/Makefile
packages/guiobj/java/Makefile
packages/guiobj/java/icons/Makefile
packages/guiobj/java/ircam/Makefile
packages/guiobj/java/ircam/jmax/Makefile
packages/guiobj/java/ircam/jmax/guiobj/Makefile
packages/guiobj/help/Makefile
packages/guiobj/winbuild/Makefile
packages/io/Makefile
packages/io/c/Makefile
packages/io/c/src/Makefile
packages/io/help/Makefile
packages/io/winbuild/Makefile
packages/ispw/Makefile
packages/ispw/c/Makefile
packages/ispw/c/src/Makefile
packages/ispw/java/Makefile
packages/ispw/java/icons/Makefile
packages/ispw/java/ircam/Makefile
packages/ispw/java/ircam/jmax/Makefile
packages/ispw/java/ircam/jmax/ispw/Makefile
packages/ispw/java/ircam/jmax/editors/Makefile
packages/ispw/java/ircam/jmax/editors/qlist/Makefile
packages/ispw/java/ircam/jmax/editors/qlist/actions/Makefile
packages/ispw/java/ircam/jmax/editors/qlist/menus/Makefile
packages/ispw/java/ircam/jmax/editors/explode/Makefile
packages/ispw/java/ircam/jmax/editors/explode/actions/Makefile
packages/ispw/java/ircam/jmax/editors/explode/menus/Makefile
packages/ispw/help/Makefile
packages/ispw/images/Makefile
packages/ispw/sounds/Makefile
packages/ispw/winbuild/Makefile
packages/ispwmath/Makefile
packages/ispwmath/c/Makefile
packages/ispwmath/c/src/Makefile
packages/ispwmath/help/Makefile
packages/ispwmath/winbuild/Makefile
packages/jack/Makefile
packages/jack/c/Makefile
packages/jack/c/src/Makefile
packages/macosx/Makefile
packages/macosx/c/Makefile
packages/macosx/c/src/Makefile
packages/midi/Makefile
packages/midi/c/Makefile
packages/midi/c/src/Makefile
packages/midi/help/Makefile
packages/midi/winbuild/Makefile
packages/midishare/Makefile
packages/midishare/c/Makefile
packages/midishare/c/src/Makefile
packages/mmio/Makefile
packages/mmio/c/Makefile
packages/mmio/c/src/Makefile
packages/mmio/winbuild/Makefile
packages/numeric/Makefile
packages/numeric/c/Makefile
packages/numeric/c/src/Makefile
packages/numeric/help/Makefile
packages/numeric/winbuild/Makefile
packages/oss/Makefile
packages/oss/c/Makefile
packages/oss/c/src/Makefile
packages/sequence/Makefile
packages/sequence/c/Makefile
packages/sequence/c/include/Makefile
packages/sequence/c/include/fts/Makefile
packages/sequence/c/include/fts/packages/Makefile
packages/sequence/c/include/fts/packages/sequence/Makefile
packages/sequence/c/src/Makefile
packages/sequence/java/Makefile
packages/sequence/java/ircam/Makefile
packages/sequence/java/ircam/jmax/Makefile
packages/sequence/java/ircam/jmax/editors/Makefile
packages/sequence/java/ircam/jmax/editors/sequence/Makefile
packages/sequence/java/ircam/jmax/editors/sequence/actions/Makefile
packages/sequence/java/ircam/jmax/editors/sequence/menus/Makefile
packages/sequence/java/ircam/jmax/editors/sequence/renderers/Makefile
packages/sequence/java/ircam/jmax/editors/sequence/tools/Makefile
packages/sequence/java/ircam/jmax/editors/sequence/track/Makefile
packages/sequence/help/Makefile
packages/sequence/fonts/Makefile
packages/sequence/images/Makefile
packages/sequence/winbuild/Makefile
packages/signal/Makefile
packages/signal/c/Makefile
packages/signal/c/src/Makefile
packages/signal/help/Makefile
packages/signal/winbuild/Makefile
packages/system/Makefile
packages/system/c/Makefile
packages/system/c/src/Makefile
packages/system/help/Makefile
packages/system/winbuild/Makefile
packages/utils/Makefile
packages/utils/c/Makefile
packages/utils/c/include/Makefile
packages/utils/c/include/fts/Makefile
packages/utils/c/include/fts/packages/Makefile
packages/utils/c/include/fts/packages/utils/Makefile
packages/utils/c/src/Makefile
packages/utils/winbuild/Makefile
packages/winbuild/Makefile
packages/winmidi/Makefile
packages/winmidi/c/Makefile
packages/winmidi/c/src/Makefile
packages/winmidi/winbuild/Makefile
utils/Makefile
utils/debian/Makefile
utils/jmax-config/Makefile
utils/jmax-config/jmax-config
utils/linux_desktop/Makefile
utils/m4/Makefile
utils/pkgconfig/jmax.pc
utils/pkgconfig/Makefile
utils/rpm/Makefile
utils/rpm/jmax.spec
utils/update/Makefile
utils/xml/Makefile
winbuild/Makefile
)


echo
echo Configuration complete. Type \'make\' to build jMax
echo

if test "$HAVE_DOXYGEN" = "yes"
then
echo
echo Doxygen have been found, so FTS api documentation will be built
echo
fi

if test "$HAVE_A_SOUND_SUPPORT" = "false"
then
echo
echo "jMax will be compiled without standard sound support (ALSA or Jack)."
echo Note that you can try to use the DEPRECATED oss packages at your own risk.
echo Are you really sure you want to continue ?
read
fi
