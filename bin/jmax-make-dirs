#!/bin/sh

# ***************************************************************************
# Constants
# ***************************************************************************

ARCHS="irix62r4k irix63r5k irix63r10k irix65r4k irix65r5k irix65r10k linuxpc linuxppc solaris"

# ***************************************************************************
# Functions
# ***************************************************************************
help ()
{
    cat >&2 << HELP_EOF

Usage:
    jmax-make-dirs [-n]

Creates all directories obj and lib for all the architectures.

Options:
  -n
    Print the commands that would be executed, but do not execute them.

Current architectures are : $ARCHS

HELP_EOF
}

# ---------------------------------------------------------------------------
decrypt_options ()
{
    OPT="none"
    NOEXEC=

    for ARG in $@
    do
	if [ $OPT = "none" ]
	then
	    case $ARG in
	    \-n )
		NOEXEC="yes" ;;
	    \-help | \-h | \-\? )
		help ;
		exit 2 ;;
	    *)
		help ;
		exit 2 ;;
	    esac
	else
	    case $OPT in
	    \-type )
		TYPE=$ARG ;;
	    esac
	    OPT="none";
	fi
    done
}

# ---------------------------------------------------------------------------
check_directory ()
{
    if [ \! -r VERSION ]
    then
	echo "You're not in jMax top directory ..."
	exit 1
    fi
}

# ---------------------------------------------------------------------------
do_it ()
{
    for i in `find . \( -name "obj" -o -name "lib" -o -name "bin" \) -type d`
    do
	echo $i
	if [ -d $i/../src ]
	then
	    if [ ! -h $i ]
	    then
		for a in $ARCHS
		do
		    echo mkdir -p $i/$a/debug $i/$a/opt  $i/$a/profile
		    if [ $NOEXEC ]
		    then
			echo > /dev/null
		    else
			mkdir -p $i/$a/debug $i/$a/opt $i/$a/profile
		   fi
		done
	   fi
       fi
    done
}

# ***************************************************************************
# Beginning of script
# ***************************************************************************

decrypt_options $@

check_directory

do_it
