#!/bin/sh
# 
# jMax
# Copyright (C) 1994, 1995, 1998, 1999 by IRCAM-Centre Georges Pompidou, Paris, France.
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# See file LICENSE for further informations on licensing terms.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
# 
# Based on Max/ISPW by Miller Puckette.
#
# Authors: Maurizio De Cecco, Francois Dechelle, Enzo Maggi, Norbert Schnell.
#

# ***************************************************************************
# Constants
# ***************************************************************************
DEFAULT_ARCH=r10k-irix6.5
DEFAULT_BUILD_DIR=/data/build
DEFAULT_DEST_DIR=/u/worksta/jmaxdev/releases

# ***************************************************************************
# Functions
# ***************************************************************************
help ()
{
    cat << HELP_EOF

Usage:
    jmax-build-sgi-pkg 
	[--arch|-a <architecture>]
	[--build-dir|-b <directory>]
	[--dest-dir|-d <directory>]
	[--make-option <make-option>]
	[--source-file|-f <file>]
	[--spec-file|-s <file>]
	[--verbose|-v]
	[--help|-h]

Builds a SGI package that can be read by swmgr and inst(1M).

Options and arguments:
  --arch|-a <architecture>    (optional)
    Specifies the architecture for which to build the package.
    Defaults to: $DEFAULT_ARCH

	[--make-option <make-option>]

  --build-dir|-b <directory>  (optional)
    Specifies the build directory (where the sources will be unpacked and compiled)
    Defaults to: $DEFAULT_BUILD_DIR
    Warning: a /src will be appended to the build directory

  --dest-dir|-d <directory>  (optional)
    Specifies the destination directory (where the package will be stored)
    Defaults to: $DEFAULT_DEST_DIR

  --make-option <make-option> (optional)
    Defines an option that is to be passed directly to make.
    Several [--make-option <make-option>] can appear in the command line.

  --source-file|-f <file>     (mandatory)
    Specifies the sources archive name (a .tar.gz file containing the source distribution)

  --spec-file|-s <file>      (mandatory)
    Specifies the spec file used for package building

  --verbose                   (optional)
    prints what it is doing

  --help
    to print this help

HELP_EOF
}


# ---------------------------------------------------------------------------
decrypt_options ()
{
    opt="none"
    ARCH=$DEFAULT_ARCH
    BUILD_DIR=$DEFAULT_BUILD_DIR
    DEST_DIR=$DEFAULT_DEST_DIR
    MAKEOPT=""
    SOURCE_FILE=
    SPEC_FILE=
    VERBOSE=

    for arg in $@
    do
	if [ $opt = "none" ]
	then
	    case $arg in
	    \--help | \-h )
		help ;
		exit 2 ;;
	    \--arch | \-a)
		opt=$arg ;;
	    \--build-dir | \-b)
		opt=$arg ;;
	    \--dest-dir | \-d)
		opt=$arg ;;
	    \--make-option)
		opt=$arg ;;
	    \--spec-file|\-s)
		opt=$arg ;;
	    \--source-file | \-f)
		opt=$arg ;;
	    \--verbose | \-v)
		VERBOSE="yes" ;;
	    *)
		help ;
		exit 2 ;;
	    esac
	else
	    case $opt in
	    \--build-dir | \-b)
		BUILD_DIR=$arg ;;
	    \--dest-dir | \-d)
		DEST_DIR=$arg ;;
	    \--make-option)
		MAKEOPT="$MAKEOPT $arg" ;;
	    \--spec-file|\-s)
		SPEC_FILE=$arg ;;
	    \--source-file | \-f)
		SOURCE_FILE=$arg ;;
	    \--arch | \-a)
		ARCH=$arg ;;
	    esac
	    opt="none";
	fi

    done

}

# ---------------------------------------------------------------------------
check_options ()
{
    if [ $SOURCE_FILE ]
    then
	echo > /dev/null
    else
	help ; exit 2 ;
    fi

    if [ ! -f $SOURCE_FILE ]
    then
	echo "Cannot find file $SOURCE_FILE"
	exit 2
    fi

    if [ $SPEC_FILE ]
    then
	echo > /dev/null
    else
	help ; exit 2 ;
    fi

    SOURCE_ROOT=`tar tvzf $SOURCE_FILE | awk 'NR==1 { print $6 ; exit 0 }' | sed 's+/$++'`
}

# ---------------------------------------------------------------------------
untar_source ()
{
    mkdir -p $BUILD_DIR/src

    /bin/rm -rf $BUILD_DIR/src/*

    if [ $VERBOSE ]
    then
	gzip -cd $SOURCE_FILE | ( cd $BUILD_DIR/src/ ; tar xvf -)
    else
	gzip -cd $SOURCE_FILE | ( cd $BUILD_DIR/src/ ; tar xf -)
    fi
}

# ---------------------------------------------------------------------------
compile_it ()
{
    (
	cd $BUILD_DIR/src/$SOURCE_ROOT
	gmake $MAKEOPT ARCH=$ARCH all
    ) || exit 1
}

# ---------------------------------------------------------------------------
build_package ()
{
    cp $SPEC_FILE $BUILD_DIR/src/$SOURCE_ROOT

    PRODUCT=`grep product $SPEC_FILE | awk 'NF >= 2 {print $2;}'`
    IMAGE=`grep image $SPEC_FILE | awk 'NF >= 2 {print $2;}'`
    SUBSYS=`grep subsys $SPEC_FILE | awk 'NF >= 2 {print $2;}'`
    IDB_TAG=$PRODUCT.$IMAGE.$SUBSYS

    VERSION=` grep version $SPEC_FILE | awk 'NF >= 2 {print $2;}' | sed s/\"//g `

    (
	cd $BUILD_DIR/src/$SOURCE_ROOT

	IDB_FILE=/tmp/idb$$

	/bin/rm -rf $IDB_FILE

	( RAWIDB=$IDB_FILE ; export RAWIDB ; gmake $MAKEOPT ARCH=$ARCH INSTALL="install -idb $IDB_TAG" install )

	sort +4u -6 < $IDB_FILE > $IDB_FILE.sorted

	GENDIST_OPTIONS="-verbose -creator $USER -root .. -sbase .. -dist .. -idb $IDB_FILE.sorted -spec `basename $SPEC_FILE`"
	# It seems that gendist does not take care about its exit status (one more bug...)
	echo /usr/sbin/gendist $GENDIST_OPTIONS
	( /usr/sbin/gendist $GENDIST_OPTIONS || exit 0 )

	cd ..

	tar cvf $DEST_DIR/$PRODUCT-$VERSION.$ARCH.tardist $PRODUCT $PRODUCT.*
    )
}

# ***************************************************************************
# Beginning of script
# ***************************************************************************

decrypt_options $@

check_options

SAVED_UMASK=`umask`
umask 22

set -x
set -e
#untar_source

#compile_it

build_package

umask $SAVED_UMASK
