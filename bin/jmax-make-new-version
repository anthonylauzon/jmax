#!/bin/sh
# ---------------------------------------------------------------------------
help ()
{
    cat >&2 << HELP_EOF

Usage:
    jmax-make-new-version -type [patch|minor|major] [-nomail]

Makes a new version of jMax:
  - increments the version number in file VERSION
  - generates new files for FTS and Java to know the new version number
  - send a mail to the development team to inform of the change

Options:
  -type patch|minor|major           (mandatory)
    defines which number will change in the new version number
  -nomail                           (optional)
    tells jmax-make-new-version not to send a mail after doing his job

HELP_EOF
}

# ---------------------------------------------------------------------------
HOST_FOR_CVS=maelzel

# Options decrypting
OPT="none"
TYPE="none"
MAIL="true"

for ARG in $@
do
    if [ $OPT = "none" ]
    then
	case $ARG in
	\-type )
	    OPT=$ARG ;;
	\-nomail )
	    MAIL= ;;
	\-help | \-h | \-\? )
	    help ;
	    exit 2 ;;
	*)
	    help ;
	    exit 2 ;;
	esac
    else
	case $OPT in
	\-type )
	    TYPE=$ARG ;;
	esac
	OPT="none";
    fi
done

# ---------------------------------------------------------------------------
# Check that we have all what we need
case $TYPE in
patch | minor | major )
    ;;
*)
    help ;
    exit 2 ;;
esac

if [ `hostname` != $HOST_FOR_CVS ]
then
    echo "Incorrect host (log on $HOST_FOR_CVS to call this script, because CVS ...)"
    exit 1
fi

if [ \! -r VERSION ]
then
    echo "Cannot find file VERSION (probably you're not in the correct directory ...)"
    exit 1
fi

# ---------------------------------------------------------------------------
# First, compute new version number and ask some confirmation
MAJOR=`awk '$1=="MAJOR" { print $2; }' VERSION`
MINOR=`awk '$1=="MINOR" { print $2; }' VERSION`
PATCH_LEVEL=`awk '$1=="PATCH_LEVEL" { print $2; }' VERSION`

OLD_VERSION=$MAJOR.$MINOR.$PATCH_LEVEL

case $TYPE in
major )
    NEW_MAJOR=`echo $MAJOR + 1 | bc`
    NEW_MINOR=0
    NEW_PATCH_LEVEL=0 ;;
minor )
    NEW_MAJOR=$MAJOR
    NEW_MINOR=`echo $MINOR + 1 | bc`
    NEW_PATCH_LEVEL=0 ;;
patch )
    NEW_MAJOR=$MAJOR
    NEW_MINOR=$MINOR
    NEW_PATCH_LEVEL=`echo $PATCH_LEVEL + 1 | bc` ;;
esac

NEW_VERSION=$NEW_MAJOR.$NEW_MINOR.$NEW_PATCH_LEVEL

# ---------------------------------------------------------------------------
# Generate new file VERSION
echo "... Generating new file VERSION"

cat <<VERSION_EOF > VERSION
MAJOR        $NEW_MAJOR
MINOR        $NEW_MINOR
PATCH_LEVEL  $NEW_PATCH_LEVEL 

VERSION_EOF


# ---------------------------------------------------------------------------
# Generate new version file for FTS
echo "... Generating new file fts/src/sys/version.h"

cat << FTS_VERSION_EOF > fts/src/sys/version.h
/* DO NOT EDIT THIS FILE: it is generated automatically by the script ``jmax-make-new-version'' */

#define FTS_VERSION_STRING "jMax version $NEW_VERSION\n"

FTS_VERSION_EOF


# ---------------------------------------------------------------------------
# Generate new version file for Java
echo "... Generating new file java/src/ircam/jmax/MaxVersion.java"
cat << JAVA_VERSION_EOF > java/src/ircam/jmax/MaxVersion.java
// DO NOT EDIT THIS FILE: it is generated automatically by the script ``jmax-make-new-version''

package ircam.jmax;

public class MaxVersion
{
  public static String getMaxVersion()
  {
    return "jMax version $NEW_VERSION";
  } 
}

JAVA_VERSION_EOF


# ---------------------------------------------------------------------------
# Automatically commit the generated files
CVS_MESSAGE="Automatic commit (version number changed to $NEW_VERSION)"
echo "... Commiting file VERSION"
(cvs commit -l -m "$CVS_MESSAGE" VERSION)
echo "... Commiting file fts/src/sys/version.h"
(cd fts/src/sys ; cvs commit -l -m "$CVS_MESSAGE" version.h)
echo "... Commiting file java/src/ircam/jmax/MaxVersion.java"
(cd java/src/ircam/jmax ; cvs commit -l -m "$CVS_MESSAGE" MaxVersion.java)


# ---------------------------------------------------------------------------
# Send a mail to the team
TEAM="dechelle@ircam.fr dececco@ircam.fr maggi@ircam.fr schnell@ircam.fr"
if [ $MAIL ]
then
    echo "... Sending a mail to $TEAM"
    echo "Don't forget to do 'cvs update'\n" | Mail -s "New jMax version is now $NEW_VERSION" $TEAM
fi

# ---------------------------------------------------------------------------
echo "... Done"
