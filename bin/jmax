#!/bin/sh
# 
# jMax
# Copyright (C) 1994, 1995, 1998, 1999 by IRCAM-Centre Georges Pompidou, Paris, France.
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# See file LICENSE for further informations on licensing terms.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
# 
# Based on Max/ISPW by Miller Puckette.
#
# Authors: Maurizio De Cecco, Francois Dechelle, Enzo Maggi, Norbert Schnell.
#

# ***************************************************************************
# Constants
# ***************************************************************************
# JAVA_DEFAULT_OPTIONS="-noclassgc -noasyncgc -mx64m -ms2m"
JAVA_DEFAULT_OPTIONS="-noclassgc -mx64m -ms2m"

prefix=/u/worksta/hanappe/jmax
exec_prefix=${prefix}
rootdir=${prefix}/share/jmax
ftsdir=${exec_prefix}/bin
javadir=${rootdir}/java

# ***************************************************************************
# Functions
# ***************************************************************************
help ()
{
    cat << HELP_EOF

Usage:
    jmax [-javaopt <java-option>]
	    [-nofork]
	    [-nojar]
	    [-root|-r <directory>]
	    [-verbose] [<other-jmax-options>]

Starts jMax.

Options and arguments:
  -javaopt <java-option>     (optional)
    Defines an option that is to be passed directly to the Java interpreter.
    Several [-javaopt java-option] can appear in the command line, in which
    case they will be concatenated.
    Example: -javaopt -verbose:gc

  -nofork
    Do not go into the background.  By default, jMax forks itself to give control 
    back to the shell.

  -nojar
    Do not use the jMax Java classes in JAR file jmax.jar. Use the .class files
    in their package directories instead.
    By default, jMax uses the jMax Java classes in JAR file jmax.jar

  -root|-r <directory>       (optional)
    Specify the root directory (where to find the jmax.jar file, the initialization
    scripts, etc.)
    Defaults to $rootdir

  <other-jmax-options>       (optional)
    Defines jMax options that are passed directly to ircam.jmax.MaxApplication as 
    command line options (for instance, jmaxArch, jmaxMode, ...)

  -verbose                   (optional)
    prints the command line before starting jMax

  -help
    to print this help

Notes:
  - jMax is started in background (i.e. the script terminates immediately). To overide this,
    use ``-nofork'' option
  - the Java interpreter (started by the command ``java'') must be in the PATH

HELP_EOF
}


# ---------------------------------------------------------------------------
decrypt_options ()
{
    opt="none"
    JAVAOPT=""
    JMAXOPT=""
    VERBOSE=
    NOFORK=
    NOJAR=
    ROOTDIR=$rootdir

    for arg in $@
    do
	if [ $opt = "none" ]
	then
	    case $arg in
	    \-javaopt)
		opt=$arg ;;
	    \-help | \-h | \-\? )
		help ;
		exit 2 ;;
	    \-verbose | \-v)
		VERBOSE="yes" ;;
	    \-nofork)
		NOFORK="yes" ;;
	    \-nojar)
		NOJAR="yes" ;;
	    \-root | \-r)
		opt=$arg ;;
	    *)
		JMAXOPT="${JMAXOPT} $arg" ;;
	    esac
	else
	    case $opt in
	    \-javaopt)
		JAVAOPT="${JAVAOPT} $arg" ;;
	    \-root | \-r)
		ROOTDIR=$arg ;;
	    esac
	    opt="none";
	fi

    done

}

# ---------------------------------------------------------------------------
check_installation ()
{
    if [ $NOJAR ]
    then
	if [ ! -f ${javadir}/src/ircam/jmax/MaxApplication.class ]
	then
	    echo "Cannot find file ${javadir}/src/ircam/jmax/MaxApplication.class"
	    echo "You have probably installed a source distribution and did not compile it !"
	    exit 1
	fi
    else
	if [ ! -f ${javadir}/jmax.jar ]
	then
	    echo "Cannot find file ${javadir}/jmax.jar"
	    echo "You have probably installed a source distribution and did not compile it !"
	    exit 1
	fi
    fi
}

# ---------------------------------------------------------------------------
build_classpath ()
{
    if [ $NOJAR ]
    then
	JMAX_CLASSPATH=${javadir}/src
    else
	JMAX_CLASSPATH=${javadir}/jmax.jar
    fi

    if [ $CLASSPATH ]
    then
	CLASSPATH=${CLASSPATH}:${JMAX_CLASSPATH}:${javadir}/jacl.jar:${javadir}/tcljava.jar
    else
	CLASSPATH=${JMAX_CLASSPATH}:${javadir}/jacl.jar:${javadir}/tcljava.jar
    fi
}

# ---------------------------------------------------------------------------
# This fixes the font problem on SGI platform. See /usr/java/webdocs/release_eoe.html for
# further explainations.
fix_sgi_fonts ()
{
    JAVA_SMALL_FONTS=true
    export JAVA_SMALL_FONTS
}

# ---------------------------------------------------------------------------
start_it ()
{
    if [ $VERBOSE ]
    then
	echo "CLASSPATH=${CLASSPATH}"
    fi

    JAVA_CMD="java $JAVA_DEFAULT_OPTIONS $JAVAOPT ircam.jmax.MaxApplication -jmaxServerDir ${ftsdir} -jmaxRoot $ROOTDIR $JMAXOPT "

    ECHO_CMD="CLASSPATH=${CLASSPATH} ; export CLASSPATH ; $JAVA_CMD"

    if [ _${NOFORK}_ = __ ]
    then
	ECHO_CMD="$ECHO_CMD &"
    fi

    if [ $VERBOSE ]
    then
	echo "( $ECHO_CMD )"
    fi

    if [ _${NOFORK}_ = __ ]
    then
	( CLASSPATH=${CLASSPATH} ; export CLASSPATH ; $JAVA_CMD & )
    else
	( CLASSPATH=${CLASSPATH} ; export CLASSPATH ; $JAVA_CMD )
    fi
}

# ***************************************************************************
# Beginning of script
# ***************************************************************************

decrypt_options $@

check_installation

build_classpath

fix_sgi_fonts

start_it












