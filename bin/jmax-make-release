#!/bin/sh
help ()
{
    cat >&2 << HELP_EOF

Usage:
    jmax-make-release -arch <arch> -type <type> [-tar <tar-command>] 
	[-norecompile]

Makes a release of jMax by recompiling everything and creating the compressed
tar file for distribution.

Options:
  -arch <arch>                 (mandatory)
    defines the architecture of the release (origin, linuxpc, ...)
  -type <type>                 (mandatory)
    defines the type of the release (free, forum, ...)
  -tar <tar-command>           (optional)
    defines tar command to use (gnutar, /usr/local/bin/tar, ...)
    WARNING: this script relies on the -T - option of the used tar command.
    Default: gnutar.
  -norecompile                 (optional)
    do not recompile everything (i.e.make ARCH=$ARCH MODE=opt clean all) before
    creating tar file. Use if you are REALLY sure everything is up-to-date.
    Default: recompile

HELP_EOF
}

OPT="none"
ARCH="none"
TYPE="none"
TAR="gnutar"

for ARG in $@
do
    if [ $OPT = "none" ]
    then
	case $ARG in
	\-arch | \-tar | \-type )
	    OPT=$ARG ;;
	\-norecompile )
	    NORECOMPILE=$ARG ;;
	\-help | \-h | \-\? )
	    help ;
	    exit 2 ;;
	*)
	    help ;
	    exit 2 ;;
	esac
    else
	case $OPT in
	\-arch )
	    ARCH=$ARG ;;
	\-type )
	    TYPE=$ARG ;;
	\-tar )
	    TAR=$ARG ;;
	esac
	OPT="none";
    fi
done

# Check that we have what we need
case $ARCH in
none )
    help ;
    exit 2 ;;
esac

case $TYPE in
none )
    help ;
    exit 2 ;;
esac

if [ \! -r VERSION ]
then
    echo "Cannot find file VERSION (probably you're not in the correct directory ...)"
    exit 1
fi

if $TAR --version | grep -s GNU >/dev/null 
then
    echo > /dev/null
else
    echo $TAR is not GNU tar. Cannot use it!
    exit 2
fi

# Recompiles everything
if [ _${NORECOMPILE}_ != _"-norecompile"_ ]
then
    echo "OK to recompile everything ? "
    read R
    if [ $R != "yes" -a $R != "y" ]
    then
	echo "OK. Nothing changed. Bye."
	exit 2
    fi
    echo make -k ARCH=$ARCH MODE=opt clean all
    make -k ARCH=$ARCH MODE=opt clean all
fi

# Generate the tar file name
ID=`awk '
$1=="MAJOR" {m=$2;} 
$1=="MINOR" {n=$2;}
$1=="PATCH_LEVEL" {p=$2;}
END { printf("%d.%d.%d\n",m,n,p);}
' VERSION`

TARFILE=/u/worksta/jmax/release/jmax.${ARCH}.${TYPE}.${ID}.tar.gz

# Create the tar file
echo "Creating tar file $TARFILE"
jmax-make-distrib-list -arch $ARCH -type $TYPE . | sed 's/^./\.\/max/' | (cd .. ; tar cvf - -T - ) | gzip > $TARFILE

# Done

