#!/bin/sh
help ()
{
    cat << HELP_EOF

Usage:
    jmax [-javaopt <java-option>]
	    [-highpriority]
	    [-nofork]
	    [-nojar]
	    [-verbose] [<other-jmax-options>]

Starts jMax.

Options and arguments:
  -javaopt <java-option>     (optional)
    Defines an option that is to be passed directly to the Java interpreter.
    Several [-javaopt java-option] can appear in the command line.

  -highpriority              (optional)
    Starts the FTS server with a raised priority in order to run more real-time
    Defaults to false.

  -nofork
    Do not go into the background.  By default, jMax forks itself to give control 
    back to the shell.

  -nojar
    Do not use the jMax Java classes in JAR file jmax.jar. Use the .class files
    in their package directories instead.
    By default, jMax uses the jMax Java classes in JAR file jmax.jar

  <other-jmax-options>       (optional)
    Defines jMax options that are passed directly to ircam.jmax.MaxApplication as 
    command line options (for instance, jmaxArch, jmaxMode, ...)

  -verbose                   (optional)
    prints the command line before starting jMax

  -help
    to print this help

Notes:
  - jMax is started in background (i.e. the script terminates immediately)
  - the Java interpreter (started by the command ``java'') must be in the PATH

HELP_EOF
}

opt="none"
JAVAOPT=""
JMAXOPT=""
ROOTDIR="none"
VERBOSE=
NOFORK=
NOJAR=
HIGHPRIORITY=

for arg in $@
do
    if [ $opt = "none" ]
    then
	case $arg in
	\-root | \-javaopt)
	    opt=$arg ;;
	\-help | \-h | \-\? )
	    help ;
	    exit 2 ;;
	\-highpriority)
	    HIGHPRIORITY="yes" ;;
	\-verbose | \-v)
	    VERBOSE="yes" ;;
	\-nofork)
	    NOFORK="yes" ;;
	\-nojar)
	    NOJAR="yes" ;;
	*)
	    JMAXOPT="${JMAXOPT} $arg" ;;
	esac
    else
	case $opt in
	\-root)
	    ROOTDIR=$arg ;;
	\-javaopt)
	    JAVAOPT="${JAVAOPT} $arg" ;;
	esac
	opt="none";
    fi
done

if [ $ROOTDIR = "none" ]
then
    help
    exit 2
fi

if [ $NOJAR ]
then
    JMAX_CLASSPATH=${ROOTDIR}/java/classes
else
    JMAX_CLASSPATH=${ROOTDIR}/java/classes/jmax.jar
fi

JAVA=`which java`
JAVA_BIN_DIR=`dirname $JAVA`
JAVA_DIR=`dirname $JAVA_BIN_DIR`
if [ -f ${JAVA_DIR}/lib/rt.jar ]
then
    # JDK 1.1.5 on IRIX
    JAVA_CLASSES=${JAVA_DIR}/lib/rt.jar
elif [ -f ${JAVA_DIR}/lib/classes.zip ]
then
    # JDK 1.1.5 on Linux
    JAVA_CLASSES=${JAVA_DIR}/lib/classes.zip
elif [ -f ${JAVA_DIR}/lib/classes.jar ]
then
    # JDK 1.1.3 on Solaris
    JAVA_CLASSES=${JAVA_DIR}/lib/classes.jar
elif [ -f /System/Library/Frameworks/JavaVM.framework/Classes/classes.jar ]
then
    # Java on Rhapsody !!!
    JAVA_CLASSES=/System/Library/Frameworks/JavaVM.framework/Classes/classes.jar:/System/Library/Frameworks/JavaVM.framework/Classes/awt.jar
else
    echo 'Java core classes (java.*.*) not found.'
fi

CLASSPATH=.:${JAVA_CLASSES}:${JMAX_CLASSPATH}:${ROOTDIR}/java/lib/jacl1.0/jacl.jar:${ROOTDIR}/java/lib/swing/swingall.jar:${ROOTDIR}/java/lib/NetComponents.jar

if [ $HIGHPRIORITY ]
then
    JMAXOPT="${JMAXOPT} -jmaxServerName fts.setuid"
fi

if [ $VERBOSE ]
then
    echo "Starting jMax with :"
    echo "   ROOTDIR     set to ${ROOTDIR}"
    echo "   JAVAOPT     set to ${JAVAOPT}"
    echo "   CLASSPATH   set to ${CLASSPATH}"
    echo "   JMAXOPT     set to ${JMAXOPT}"
    echo "Command line:"
    if [ $NOFORK ]
    then
	echo "java -noclassgc -noasyncgc -mx64m -ms2m $JAVAOPT -classpath $CLASSPATH ircam.jmax.MaxApplication -root $ROOTDIR $JMAXOPT"
    else
	echo "java -noclassgc -noasyncgc -mx64m -ms2m $JAVAOPT -classpath $CLASSPATH ircam.jmax.MaxApplication -root $ROOTDIR $JMAXOPT &"
    fi
fi

if [ $NOFORK ]
then
    java -noclassgc -noasyncgc -mx64m -ms2m $JAVAOPT -classpath $CLASSPATH ircam.jmax.MaxApplication -root $ROOTDIR $JMAXOPT
else
    java -noclassgc -noasyncgc -mx64m -ms2m $JAVAOPT -classpath $CLASSPATH ircam.jmax.MaxApplication -root $ROOTDIR $JMAXOPT &
fi


